TODO for BiwaScheme
===================

High priority
-------------

- errors on test/spec.html

- LICENCE to biwascheme-min.js

- [r6rs] Errors and conditions
- [r6rs] library definition and loading

- upgrade jQuery to 1.7

- (format)

- stop raising error when undefined is returned
- list->js-array, js-array->list

- require('sys') -> require('util')

Middle priority
---------------

-- new syntax: ..

-- reference

-- better parser (for missing syntaxes)

-- $ biwas -e
-- $ biwas (REPL)

Low priority
------------

--- [r6rs] vector quasiquote
--- [r6rs] case-lambda
--- [r6rs] syntax-case, syntax-rules
--- [r6rs] some functions for numbers
 --- should try http://github.com/dyoo/js-numbers/ ?
--- [r6rs][node] i/o

--- move website to Heroku?
 --- because some tests needs server-side program
--- use Node for unit tests
--- use biwas instead of Makefile

Refactoring and maintenance
---------------------------

--- '$ make website'

--- stackbase.js

--- use underscore.uniqueId for gensym, etc.

--- BiwaScheme.memoize
    eg.
      BiwaScheme.memoize(BiwaScheme.Enumeration.EnumType.prototype, "_universe"); 

      Original function:
        constructor: function(){
          return function(ar){
          };
        }

      Memoizer:
        memoize = function(obj, name){
          obj["compute_"+name] = obj[name];
          obj[name] = function(/*arguments*/){
            if(!obj.hasOwnProperty("cached_"+name)){
              obj["cached_"+name] = obj["compute_"+name].apply(TODO, arguments);
            }
            return obj["cached_"+name];
          }
        }

     File:
       src/system/class.js?

Memo
----

### format

22.3.1 FORMAT Basic Output

o||~C||character || (format nil "~C" #\A) =>  "A"
 ||~:C|| spelled || (format nil "~:C" #\Space) =>  "Space"
 ||~@C||how to type || (format nil "~:@C" #\Control-Partial) =>  "Control-<PARTIAL> (Top-F)"  
 
 ||~[n]% ||newline||
 ||~[n]& ||fresh-line
 ||~[n]| ||page separator
o||~~    ||tilde

 ||~R || 



